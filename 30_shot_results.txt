========== Evaluation Results ==========
F1ScoreResult:
Metric target: MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
F1 @ 50:     0.5268
F1 @ 75:     0.4581
F1 @ thresh: [    0.52681     0.52319     0.52319     0.50661     0.48569     0.45807     0.38359     0.27793     0.14321    0.022492]
IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
F1 per class:
  0: [    0.18519     0.18519     0.18519     0.18519     0.14815     0.14815     0.14815    0.037037    0.037037           0]
  1: [    0.78067     0.78067     0.78067     0.77323     0.75093     0.72119     0.60967     0.43866     0.20074    0.022305]
  2: [    0.50617     0.50617     0.50617     0.48148     0.46914      0.4321     0.22222      0.1358    0.024691    0.012346]
  3: [    0.60465     0.60465     0.60465     0.60465     0.55814     0.55814      0.4186     0.18605    0.046512           0]
  4: [    0.48544      0.4466      0.4466     0.38835     0.34951      0.3301     0.27184     0.15534           0           0]
  5: [   0.094118    0.094118    0.094118    0.070588    0.070588    0.023529    0.023529    0.023529           0           0]
  6: [    0.45884     0.45884     0.45884     0.44483     0.42382      0.3993     0.33275     0.22767     0.10858    0.014011]
  7: [    0.71545     0.71545     0.71545     0.70732     0.69919     0.69106     0.65854     0.57724     0.37398    0.065041]
  8: [    0.83721     0.74419     0.74419     0.65116     0.51163     0.27907     0.27907     0.13953    0.046512           0]
  9: [    0.94737     0.94737     0.94737     0.94737     0.94737     0.94737     0.94737     0.84211     0.84211     0.21053]

Small objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.2254
  F1 @ 75:     0.1650
  F1 @ thresh: [    0.22543     0.22543     0.22543     0.21479     0.19106     0.16499     0.10039     0.03885   0.0083583           0]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    0: [    0.18519     0.18519     0.18519     0.18519     0.14815     0.14815     0.14815    0.037037    0.037037           0]
    1: [    0.15385     0.15385     0.15385     0.15385     0.15385     0.15385     0.15385           0           0           0]
    2: [    0.28571     0.28571     0.28571     0.28571     0.28571     0.25397    0.095238    0.031746           0           0]
    3: [    0.61905     0.61905     0.61905     0.61905     0.57143     0.57143     0.42857     0.19048    0.047619           0]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [   0.094118    0.094118    0.094118    0.070588    0.070588    0.023529    0.023529    0.023529           0           0]
    6: [    0.23288     0.23288     0.23288     0.21918     0.17808     0.15068    0.068493    0.027397           0           0]
  
Medium objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.5906
  F1 @ 75:     0.5368
  F1 @ thresh: [    0.59058     0.58884     0.58884      0.5769     0.55812     0.53676     0.45062     0.31409     0.13355    0.017713]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    1: [     0.8189      0.8189      0.8189     0.81102      0.7874     0.75591      0.6378     0.46457      0.2126    0.023622]
    2: [    0.55319     0.55319     0.55319     0.55319     0.53191     0.51064     0.31915     0.21277    0.042553    0.021277]
    4: [    0.49485     0.47423     0.47423     0.41237     0.37113     0.35052     0.28866     0.16495           0           0]
    6: [    0.51928     0.51928     0.51928     0.51414     0.49871     0.47815     0.41645     0.28278     0.13882    0.015424]
    7: [    0.48718     0.48718     0.48718     0.46154     0.46154     0.46154      0.4359     0.33333     0.12821    0.025641]
  
Large objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.7260
  F1 @ 75:     0.6541
  F1 @ thresh: [      0.726     0.71403     0.71403     0.70205     0.68409     0.65415     0.63972     0.56487     0.40999    0.082964]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    4: [          0           0           0           0           0           0           0           0           0           0]
    6: [    0.47059     0.47059     0.47059     0.47059     0.47059     0.47059     0.47059     0.41176     0.23529    0.058824]
    7: [    0.73494     0.73494     0.73494     0.73494     0.73494     0.73494     0.71084      0.6506     0.45783    0.084337]
    8: [    0.85714      0.7619      0.7619     0.66667     0.52381     0.28571     0.28571     0.14286    0.047619           0]
    9: [    0.97297     0.97297     0.97297     0.97297     0.97297     0.97297     0.97297     0.86486     0.86486     0.21622]
  
RecallResult:
Metric target:    MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
R @ 50:     0.4007
R @ 75:     0.3479
R @ thresh: [    0.40072     0.39714     0.39714     0.38462     0.36852     0.34794     0.29338     0.21377     0.11181    0.017889]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
Recall per class:
  0: [    0.10638     0.10638     0.10638     0.10638    0.085106    0.085106    0.085106    0.021277    0.021277           0]
  1: [    0.66456     0.66456     0.66456     0.65823     0.63924     0.61392     0.51899     0.37342     0.17089    0.018987]
  2: [    0.34746     0.34746     0.34746     0.33051     0.32203     0.29661     0.15254     0.09322    0.016949   0.0084746]
  3: [    0.54167     0.54167     0.54167     0.54167         0.5         0.5       0.375     0.16667    0.041667           0]
  4: [    0.46296     0.42593     0.42593     0.37037     0.33333     0.31481     0.25926     0.14815           0           0]
  5: [   0.049383    0.049383    0.049383    0.037037    0.037037    0.012346    0.012346    0.012346           0           0]
  6: [    0.29773     0.29773     0.29773     0.28864       0.275     0.25909     0.21591     0.14773    0.070455   0.0090909]
  7: [    0.56051     0.56051     0.56051     0.55414     0.54777      0.5414     0.51592     0.45223     0.29299    0.050955]
  8: [    0.85714      0.7619      0.7619     0.66667     0.52381     0.28571     0.28571     0.14286    0.047619           0]
  9: [          1           1           1           1           1           1           1     0.88889     0.88889     0.22222]

Small objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.1420
  R @ 75:     0.1072
  R @ thresh: [    0.14203     0.14203     0.14203     0.13623     0.12174     0.10725    0.066667    0.026087   0.0057971           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    0: [    0.10638     0.10638     0.10638     0.10638    0.085106    0.085106    0.085106    0.021277    0.021277           0]
    1: [   0.090909    0.090909    0.090909    0.090909    0.090909    0.090909    0.090909           0           0           0]
    2: [    0.17308     0.17308     0.17308     0.17308     0.17308     0.15385    0.057692    0.019231           0           0]
    3: [    0.54167     0.54167     0.54167     0.54167         0.5         0.5       0.375     0.16667    0.041667           0]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [   0.049383    0.049383    0.049383    0.037037    0.037037    0.012346    0.012346    0.012346           0           0]
    6: [    0.13178     0.13178     0.13178     0.12403     0.10078    0.085271     0.03876    0.015504           0           0]
  
Medium objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.4521
  R @ 75:     0.4092
  R @ thresh: [    0.45215      0.4505      0.4505     0.44059     0.42574     0.40924     0.34323     0.23927     0.10066    0.013201]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    1: [    0.70748     0.70748     0.70748     0.70068     0.68027     0.65306     0.55102     0.40136     0.18367    0.020408]
    2: [    0.39394     0.39394     0.39394     0.39394     0.37879     0.36364     0.22727     0.15152    0.030303    0.015152]
    4: [    0.47059     0.45098     0.45098     0.39216     0.35294     0.33333     0.27451     0.15686           0           0]
    6: [    0.35439     0.35439     0.35439     0.35088     0.34035     0.32632     0.28421     0.19298    0.094737    0.010526]
    7: [    0.33333     0.33333     0.33333     0.31579     0.31579     0.31579     0.29825     0.22807    0.087719    0.017544]
  
Large objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.6287
  R @ 75:     0.5569
  R @ thresh: [    0.62874     0.61677     0.61677     0.60479     0.58683     0.55689     0.54491     0.47904     0.35329    0.071856]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    4: [          0           0           0           0           0           0           0           0           0           0]
    6: [    0.30769     0.30769     0.30769     0.30769     0.30769     0.30769     0.30769     0.26923     0.15385    0.038462]
    7: [       0.61        0.61        0.61        0.61        0.61        0.61        0.59        0.54        0.38        0.07]
    8: [    0.85714      0.7619      0.7619     0.66667     0.52381     0.28571     0.28571     0.14286    0.047619           0]
    9: [          1           1           1           1           1           1           1     0.88889     0.88889     0.22222]
  
PrecisionResult:
Metric target:    MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
P @ 50:     0.9361
P @ 75:     0.7761
P @ thresh: [    0.93611     0.93243     0.93243     0.88999      0.8525     0.77612     0.64651     0.46078     0.22576    0.034078]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
Precision per class:
  0: [    0.71429     0.71429     0.71429     0.71429     0.57143     0.57143     0.57143     0.14286     0.14286           0]
  1: [    0.94595     0.94595     0.94595     0.93694     0.90991     0.87387     0.73874     0.53153     0.24324    0.027027]
  2: [    0.93182     0.93182     0.93182     0.88636     0.86364     0.79545     0.40909        0.25    0.045455    0.022727]
  3: [    0.68421     0.68421     0.68421     0.68421     0.63158     0.63158     0.47368     0.21053    0.052632           0]
  4: [     0.5102     0.46939     0.46939     0.40816     0.36735     0.34694     0.28571     0.16327           0           0]
  5: [          1           1           1        0.75        0.75        0.25        0.25        0.25           0           0]
  6: [          1           1           1     0.96947     0.92366     0.87023     0.72519     0.49618     0.23664    0.030534]
  7: [    0.98876     0.98876     0.98876     0.97753     0.96629     0.95506     0.91011     0.79775     0.51685    0.089888]
  8: [    0.81818     0.72727     0.72727     0.63636         0.5     0.27273     0.27273     0.13636    0.045455           0]
  9: [        0.9         0.9         0.9         0.9         0.9         0.9         0.9         0.8         0.8         0.2]

Small objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     0.8955
  P @ 75:     0.5504
  P @ thresh: [    0.89551     0.89551     0.89551     0.81482     0.72551     0.55042     0.33835     0.15131    0.023326           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    0: [    0.71429     0.71429     0.71429     0.71429     0.57143     0.57143     0.57143     0.14286     0.14286           0]
    1: [        0.5         0.5         0.5         0.5         0.5         0.5         0.5           0           0           0]
    2: [    0.81818     0.81818     0.81818     0.81818     0.81818     0.72727     0.27273    0.090909           0           0]
    3: [    0.72222     0.72222     0.72222     0.72222     0.66667     0.66667         0.5     0.22222    0.055556           0]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [          1           1           1        0.75        0.75        0.25        0.25        0.25           0           0]
    6: [          1           1           1     0.94118     0.76471     0.64706     0.29412     0.11765           0           0]
  
Medium objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     0.9226
  P @ 75:     0.8433
  P @ thresh: [    0.92265     0.92082     0.92082     0.90406     0.87614     0.84327     0.71002     0.49423     0.21348    0.028736]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    1: [    0.97196     0.97196     0.97196     0.96262     0.93458      0.8972     0.75701      0.5514     0.25234    0.028037]
    2: [    0.92857     0.92857     0.92857     0.92857     0.89286     0.85714     0.53571     0.35714    0.071429    0.035714]
    4: [    0.52174         0.5         0.5     0.43478      0.3913     0.36957     0.30435     0.17391           0           0]
    6: [    0.97115     0.97115     0.97115     0.96154     0.93269     0.89423     0.77885     0.52885     0.25962    0.028846]
    7: [    0.90476     0.90476     0.90476     0.85714     0.85714     0.85714     0.80952     0.61905      0.2381    0.047619]
  
Large objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     0.9190
  P @ 75:     0.8472
  P @ thresh: [    0.91902     0.90705     0.90705     0.89507     0.87711     0.84717     0.82902     0.73489     0.51936     0.10566]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    4: [          0           0           0           0           0           0           0           0           0           0]
    6: [          1           1           1           1           1           1           1       0.875         0.5       0.125]
    7: [    0.92424     0.92424     0.92424     0.92424     0.92424     0.92424     0.89394     0.81818     0.57576     0.10606]
    8: [    0.85714      0.7619      0.7619     0.66667     0.52381     0.28571     0.28571     0.14286    0.047619           0]
    9: [    0.94737     0.94737     0.94737     0.94737     0.94737     0.94737     0.94737     0.84211     0.84211     0.21053]
  
MeanAveragePrecisionResult:
Metric target: MetricTarget.BOXES
Class agnostic: False
mAP @ 50:95: 0.3091
mAP @ 50:    0.4721
mAP @ 75:    0.3412
mAP scores: [    0.47208     0.44985     0.44854     0.42221     0.38012     0.34116     0.27167     0.17901     0.11257    0.013994]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
AP per class:
  0: [    0.10128     0.10128     0.10128     0.10128    0.073847    0.073847    0.073847   0.0082508   0.0082508           0]
  1: [    0.65843     0.65843     0.65843     0.64563     0.61203     0.57609     0.42359     0.25187    0.072013   0.0013201]
  2: [    0.34362     0.34362     0.34362     0.33014     0.29919     0.23178    0.069181    0.024946  0.00056043           0]
  3: [    0.51916     0.51916     0.51916     0.51916      0.4227      0.4227     0.19547    0.062004    0.016502           0]
  4: [      0.381      0.2955     0.28241     0.23252     0.19589     0.17221     0.13506    0.056995           0           0]
  5: [   0.049505    0.049505    0.049505    0.036775    0.036775   0.0049505   0.0049505   0.0049505           0           0]
  6: [    0.29703     0.29703     0.29703     0.27488     0.26056      0.2185     0.14264    0.062648    0.014025           0]
  7: [     0.5639      0.5639      0.5639     0.54387     0.53041     0.51861     0.47907     0.37705     0.13819   0.0053508]
  8: [    0.80686     0.67011     0.67011     0.53784     0.36978     0.19289     0.19289    0.066926   0.0016659           0]
  9: [          1           1           1           1           1           1           1     0.87445     0.87445     0.13327]

Small objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.0928
  mAP @ 50:    0.1545
  mAP @ 75:    0.1113
  mAP scores: [    0.15451     0.15451     0.15451     0.15006     0.12975     0.11126     0.05785    0.011601   0.0035361           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    0: [    0.10128     0.10128     0.10128     0.10128    0.073847    0.073847    0.073847   0.0082508   0.0082508           0]
    1: [    0.09901     0.09901     0.09901     0.09901     0.09901     0.09901     0.09901           0           0           0]
    2: [    0.17227     0.17227     0.17227     0.17227     0.17227     0.11037    0.018612   0.0033003           0           0]
    3: [    0.52086     0.52086     0.52086     0.52086     0.42465     0.42465     0.19664    0.062004    0.016502           0]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [   0.049505    0.049505    0.049505    0.036775    0.036775   0.0049505   0.0049505   0.0049505           0           0]
    6: [    0.13861     0.13861     0.13861     0.12026     0.10169    0.066017    0.011894   0.0027003           0           0]
  
Medium objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.2753
  mAP @ 50:    0.4318
  mAP @ 75:    0.3356
  mAP scores: [    0.43184     0.41653      0.4138     0.39313     0.36551      0.3356     0.23942     0.13114    0.025059   0.0007257]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    1: [    0.69872     0.69872     0.69872     0.69521     0.66007     0.61331     0.45598     0.27276    0.078521   0.0014256]
    2: [    0.39491     0.39491     0.39491     0.39491     0.34531     0.30205     0.12413    0.056562    0.002965  0.00090009]
    4: [    0.39404     0.31751     0.30383     0.24638     0.20943     0.18544     0.14584    0.060145           0           0]
    6: [    0.34446     0.34446     0.34446     0.34287     0.32651     0.29094     0.20728    0.093172    0.020245  0.00031266]
    7: [    0.32707     0.32707     0.32707     0.28626     0.28626     0.28626     0.26384     0.17307    0.023562   0.0009901]
  
Large objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.3891
  mAP @ 50:    0.5345
  mAP @ 75:    0.4113
  mAP scores: [    0.53447     0.50707     0.50707     0.48057     0.44666     0.41128     0.40534     0.32787     0.23941    0.031055]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    4: [          0           0           0           0           0           0           0           0           0           0]
    6: [    0.30693     0.30693     0.30693     0.30693     0.30693     0.30693     0.30693     0.25757     0.12407    0.013201]
    7: [    0.55659     0.55659     0.55659     0.55659     0.55659     0.55659      0.5269     0.44039     0.19685   0.0088084]
    8: [    0.80881     0.67183     0.67183     0.53935     0.36978     0.19289     0.19289    0.066926   0.0016659           0]
    9: [          1           1           1           1           1           1           1     0.87445     0.87445     0.13327]
  
