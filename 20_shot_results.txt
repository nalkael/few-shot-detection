========== Evaluation Results ==========
F1ScoreResult:
Metric target: MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
F1 @ 50:     0.5171
F1 @ 75:     0.4381
F1 @ thresh: [     0.5171     0.51336     0.50713     0.49173     0.47547     0.43809     0.36657     0.26898     0.11698    0.018762]
IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
F1 per class:
  0: [    0.19231     0.19231     0.19231     0.15385     0.15385     0.15385     0.11538     0.11538           0           0]
  1: [    0.71146     0.71146     0.71146     0.69565     0.69565     0.64032     0.54545     0.38735     0.12648     0.01581]
  2: [    0.40541     0.40541     0.36486     0.33784      0.2973     0.25676     0.14865    0.094595    0.013514           0]
  3: [       0.55        0.55        0.55        0.55        0.55         0.5         0.4        0.25           0           0]
  4: [    0.52525     0.48485     0.44444     0.40404     0.34343     0.32323     0.22222     0.10101    0.040404    0.020202]
  5: [    0.02439     0.02439     0.02439     0.02439           0           0           0           0           0           0]
  6: [    0.61635     0.61635     0.61635     0.60377     0.59119     0.54717     0.46226     0.33962      0.1478    0.018868]
  7: [    0.37949     0.37949     0.37949     0.37949     0.36923     0.35897     0.33846     0.27692     0.17436    0.020513]
  8: [    0.80952     0.71429     0.71429     0.61905     0.57143     0.33333     0.28571     0.14286    0.047619    0.047619]
  9: [    0.97297     0.97297     0.97297     0.97297     0.97297     0.97297     0.91892     0.86486     0.75676     0.27027]

Small objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.1827
  F1 @ 75:     0.1271
  F1 @ thresh: [    0.18267     0.18267     0.17729     0.16194     0.14578     0.12714    0.063757    0.038163           0           0]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    0: [    0.19231     0.19231     0.19231     0.15385     0.15385     0.15385     0.11538     0.11538           0           0]
    1: [          0           0           0           0           0           0           0           0           0           0]
    2: [    0.14286     0.14286     0.10714     0.10714    0.071429    0.071429           0           0           0           0]
    3: [       0.55        0.55        0.55        0.55        0.55         0.5         0.4        0.25           0           0]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [    0.02439     0.02439     0.02439     0.02439           0           0           0           0           0           0]
    6: [    0.24324     0.24324     0.24324     0.21622      0.2027     0.16216    0.054054    0.013514           0           0]
  
Medium objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.6532
  F1 @ 75:     0.5751
  F1 @ thresh: [     0.6532     0.64966     0.64366     0.63365     0.61462     0.57505     0.48465     0.34563     0.13825    0.016249]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    1: [    0.74689     0.74689     0.74689     0.73029     0.73029      0.6722     0.57261     0.40664     0.13278    0.016598]
    2: [    0.49438     0.49438     0.47191     0.44944     0.40449     0.35955     0.22472      0.1573    0.022472           0]
    4: [    0.54737     0.50526     0.46316     0.42105     0.35789     0.33684     0.23158     0.10526    0.042105    0.021053]
    6: [    0.71556     0.71556     0.71556     0.71556     0.70222     0.66222     0.58222     0.42667     0.19111    0.022222]
    7: [    0.37838     0.37838     0.37838     0.37838     0.35135     0.35135      0.2973     0.21622     0.10811           0]
  
Large objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.4882
  F1 @ 75:     0.4268
  F1 @ thresh: [    0.48818     0.47591     0.47591     0.46364     0.45751     0.42684     0.41472     0.36172     0.23434    0.064684]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    4: [          0           0           0           0           0           0           0           0           0           0]
    6: [    0.55556     0.55556     0.55556     0.55556     0.55556     0.55556     0.55556         0.5     0.22222    0.055556]
    7: [    0.31667     0.31667     0.31667     0.31667     0.31667     0.31667     0.31667     0.28333     0.18333    0.033333]
    8: [    0.82927     0.73171     0.73171     0.63415     0.58537     0.34146     0.29268     0.14634     0.04878     0.04878]
    9: [          1           1           1           1           1           1     0.94444     0.88889     0.77778     0.27778]
  
RecallResult:
Metric target:    MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
R @ 50:     0.3855
R @ 75:     0.3256
R @ thresh: [    0.38551     0.38193     0.37746     0.36583      0.3542     0.32558     0.27281     0.19946    0.087657    0.015206]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
Recall per class:
  0: [    0.10638     0.10638     0.10638    0.085106    0.085106    0.085106     0.06383     0.06383           0           0]
  1: [    0.56962     0.56962     0.56962     0.55696     0.55696     0.51266     0.43671     0.31013     0.10127    0.012658]
  2: [    0.25424     0.25424     0.22881     0.21186     0.18644     0.16102     0.09322    0.059322   0.0084746           0]
  3: [    0.45833     0.45833     0.45833     0.45833     0.45833     0.41667     0.33333     0.20833           0           0]
  4: [    0.48148     0.44444     0.40741     0.37037     0.31481      0.2963      0.2037    0.092593    0.037037    0.018519]
  5: [   0.012346    0.012346    0.012346    0.012346           0           0           0           0           0           0]
  6: [    0.44545     0.44545     0.44545     0.43636     0.42727     0.39545     0.33409     0.24545     0.10682    0.013636]
  7: [    0.23567     0.23567     0.23567     0.23567      0.2293     0.22293     0.21019     0.17197     0.10828    0.012739]
  8: [    0.80952     0.71429     0.71429     0.61905     0.57143     0.33333     0.28571     0.14286    0.047619    0.047619]
  9: [          1           1           1           1           1           1     0.94444     0.88889     0.77778     0.27778]

Small objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.1130
  R @ 75:     0.0812
  R @ thresh: [    0.11304     0.11304     0.11014     0.10145    0.092754    0.081159    0.043478    0.026087           0           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    0: [    0.10638     0.10638     0.10638    0.085106    0.085106    0.085106     0.06383     0.06383           0           0]
    1: [          0           0           0           0           0           0           0           0           0           0]
    2: [   0.076923    0.076923    0.057692    0.057692    0.038462    0.038462           0           0           0           0]
    3: [    0.45833     0.45833     0.45833     0.45833     0.45833     0.41667     0.33333     0.20833           0           0]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [   0.012346    0.012346    0.012346    0.012346           0           0           0           0           0           0]
    6: [    0.13953     0.13953     0.13953     0.12403     0.11628    0.093023    0.031008   0.0077519           0           0]
  
Medium objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.5165
  R @ 75:     0.4538
  R @ thresh: [     0.5165      0.5132     0.50825         0.5     0.48515      0.4538     0.38284     0.27228     0.10891    0.013201]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    1: [    0.61224     0.61224     0.61224     0.59864     0.59864     0.55102     0.46939     0.33333     0.10884    0.013605]
    2: [    0.33333     0.33333     0.31818     0.30303     0.27273     0.24242     0.15152     0.10606    0.015152           0]
    4: [     0.5098     0.47059     0.43137     0.39216     0.33333     0.31373     0.21569    0.098039    0.039216    0.019608]
    6: [    0.56491     0.56491     0.56491     0.56491     0.55439     0.52281     0.45965     0.33684     0.15088    0.017544]
    7: [    0.24561     0.24561     0.24561     0.24561     0.22807     0.22807     0.19298     0.14035    0.070175           0]
  
Large objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.3832
  R @ 75:     0.3234
  R @ thresh: [    0.38323     0.37126     0.37126     0.35928     0.35329     0.32335     0.31138     0.26946     0.17964    0.053892]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    4: [          0           0           0           0           0           0           0           0           0           0]
    6: [    0.38462     0.38462     0.38462     0.38462     0.38462     0.38462     0.38462     0.34615     0.15385    0.038462]
    7: [       0.19        0.19        0.19        0.19        0.19        0.19        0.19        0.17        0.11        0.02]
    8: [    0.80952     0.71429     0.71429     0.61905     0.57143     0.33333     0.28571     0.14286    0.047619    0.047619]
    9: [          1           1           1           1           1           1     0.94444     0.88889     0.77778     0.27778]
  
PrecisionResult:
Metric target:    MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
P @ 50:     0.9573
P @ 75:     0.7518
P @ thresh: [    0.95734      0.9534      0.9407     0.91032     0.81147     0.75181       0.626      0.4677     0.19942    0.028619]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
Precision per class:
  0: [          1           1           1         0.8         0.8         0.8         0.6         0.6           0           0]
  1: [    0.94737     0.94737     0.94737     0.92632     0.92632     0.85263     0.72632     0.51579     0.16842    0.021053]
  2: [          1           1         0.9     0.83333     0.73333     0.63333     0.36667     0.23333    0.033333           0]
  3: [     0.6875      0.6875      0.6875      0.6875      0.6875       0.625         0.5      0.3125           0           0]
  4: [    0.57778     0.53333     0.48889     0.44444     0.37778     0.35556     0.24444     0.11111    0.044444    0.022222]
  5: [          1           1           1           1           0           0           0           0           0           0]
  6: [          1           1           1     0.97959     0.95918     0.88776        0.75     0.55102      0.2398    0.030612]
  7: [    0.97368     0.97368     0.97368     0.97368     0.94737     0.92105     0.86842     0.71053     0.44737    0.052632]
  8: [    0.80952     0.71429     0.71429     0.61905     0.57143     0.33333     0.28571     0.14286    0.047619    0.047619]
  9: [    0.94737     0.94737     0.94737     0.94737     0.94737     0.94737     0.89474     0.84211     0.73684     0.26316]

Small objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     0.9238
  P @ 75:     0.4640
  P @ thresh: [     0.9238      0.9238     0.88612     0.81951     0.52737     0.46398     0.19524     0.12316           0           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    0: [          1           1           1         0.8         0.8         0.8         0.6         0.6           0           0]
    1: [          0           0           0           0           0           0           0           0           0           0]
    2: [          1           1        0.75        0.75         0.5         0.5           0           0           0           0]
    3: [     0.6875      0.6875      0.6875      0.6875      0.6875       0.625         0.5      0.3125           0           0]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [          1           1           1           1           0           0           0           0           0           0]
    6: [    0.94737     0.94737     0.94737     0.84211     0.78947     0.63158     0.21053    0.052632           0           0]
  
Medium objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     0.9225
  P @ 75:     0.8120
  P @ thresh: [    0.92251     0.91869     0.91013     0.89641     0.86711     0.81201      0.6807     0.48705     0.19454    0.021325]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    1: [    0.95745     0.95745     0.95745     0.93617     0.93617      0.8617     0.73404     0.52128     0.17021    0.021277]
    2: [    0.95652     0.95652     0.91304     0.86957     0.78261     0.69565     0.43478     0.30435    0.043478           0]
    4: [    0.59091     0.54545         0.5     0.45455     0.38636     0.36364        0.25     0.11364    0.045455    0.022727]
    6: [    0.97576     0.97576     0.97576     0.97576     0.95758     0.90303     0.79394     0.58182     0.26061    0.030303]
    7: [    0.82353     0.82353     0.82353     0.82353     0.76471     0.76471     0.64706     0.47059     0.23529           0]
  
Large objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     0.9392
  P @ 75:     0.8763
  P @ thresh: [    0.93922     0.92665     0.92665     0.91407     0.90778     0.87635     0.86407     0.76377     0.48174     0.11168]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    4: [          0           0           0           0           0           0           0           0           0           0]
    6: [          1           1           1           1           1           1           1         0.9         0.4         0.1]
    7: [       0.95        0.95        0.95        0.95        0.95        0.95        0.95        0.85        0.55         0.1]
    8: [       0.85        0.75        0.75        0.65         0.6        0.35         0.3        0.15        0.05        0.05]
    9: [          1           1           1           1           1           1     0.94444     0.88889     0.77778     0.27778]
  
MeanAveragePrecisionResult:
Metric target: MetricTarget.BOXES
Class agnostic: False
mAP @ 50:95: 0.2724
mAP @ 50:    0.4213
mAP @ 75:    0.2987
mAP scores: [    0.42132     0.40651     0.39924     0.36947     0.34444     0.29874     0.23597     0.15501    0.078126     0.01482]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
AP per class:
  0: [    0.10891     0.10891     0.10891    0.050912    0.050912    0.050912     0.03529     0.03529           0           0]
  1: [    0.55721     0.55721     0.55721     0.54356     0.54356     0.48445     0.33576     0.18936    0.017548  0.00030465]
  2: [    0.25743     0.25743     0.22502     0.20401      0.1603     0.12318    0.065183    0.031333           0           0]
  3: [    0.44923     0.44923     0.44923     0.44923     0.44923     0.35965     0.27574     0.10285           0           0]
  4: [    0.39238     0.36171     0.32135     0.27835     0.22522     0.21251     0.13554    0.052898    0.002029  0.00034141]
  5: [   0.019802    0.019802    0.019802    0.019802           0           0           0           0           0           0]
  6: [    0.44554     0.44554     0.44554     0.42353     0.40641     0.33904     0.22894     0.11901    0.023886  0.00039604]
  7: [    0.23382     0.23382     0.23382     0.23382     0.21165     0.20487     0.18099    0.099222    0.029733  0.00058241]
  8: [    0.74885     0.63147     0.63147     0.49148     0.39708     0.21275     0.19289    0.066926   0.0016659   0.0016659]
  9: [          1           1           1           1           1           1     0.90931     0.85325      0.7064     0.14491]

Small objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.0656
  mAP @ 50:    0.1124
  mAP @ 75:    0.0715
  mAP scores: [    0.11239     0.11239     0.10957    0.097321    0.087256    0.071467    0.045935    0.019735           0           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    0: [    0.10891     0.10891     0.10891    0.050912    0.050912    0.050912     0.03529     0.03529           0           0]
    1: [          0           0           0           0           0           0           0           0           0           0]
    2: [   0.079208    0.079208    0.059406    0.059406    0.017492    0.017492           0           0           0           0]
    3: [    0.44923     0.44923     0.44923     0.44923     0.44923     0.35965     0.27574     0.10285           0           0]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [   0.019802    0.019802    0.019802    0.019802           0           0           0           0           0           0]
    6: [    0.12961     0.12961     0.12961      0.1019    0.093161    0.072218    0.010514           0           0           0]
  
Medium objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.2605
  mAP @ 50:    0.4164
  mAP @ 75:    0.3099
  mAP scores: [     0.4164     0.41132     0.39875     0.38054     0.34983     0.30991     0.21424     0.10978     0.01439  0.00017962]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    1: [    0.60592     0.60592     0.60592     0.58268     0.58268     0.52168     0.35918     0.20283    0.017185  0.00023026]
    2: [    0.31965     0.31965     0.29898     0.28103     0.23579     0.19149     0.11094    0.060287  0.00076161           0]
    4: [    0.40963     0.38423     0.34206     0.29221     0.23749     0.22422     0.14087    0.052898    0.002029  0.00034141]
    6: [     0.5408      0.5408      0.5408      0.5408     0.52066     0.43965      0.3259     0.17153    0.039274  0.00032641]
    7: [      0.206       0.206       0.206       0.206     0.17253     0.17253     0.13431    0.061376    0.012703           0]
  
Large objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.3326
  mAP @ 50:    0.4636
  mAP @ 75:    0.3564
  mAP scores: [     0.4636     0.44013     0.44013     0.41213     0.39325     0.35638     0.33427     0.27581     0.17231    0.037739]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    4: [          0           0           0           0           0           0           0           0           0           0]
    6: [    0.38614     0.38614     0.38614     0.38614     0.38614     0.38614     0.38614     0.31293     0.10557    0.039604]
    7: [    0.18303     0.18303     0.18303     0.18303     0.18303     0.18303     0.18303     0.14595    0.047932   0.0025145]
    8: [    0.74885     0.63147     0.63147     0.49148     0.39708     0.21275     0.19289    0.066926   0.0016659   0.0016659]
    9: [          1           1           1           1           1           1     0.90931     0.85325      0.7064     0.14491]
  
