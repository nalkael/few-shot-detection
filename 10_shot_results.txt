========== Evaluation Results ==========
F1ScoreResult:
Metric target: MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
F1 @ 50:     0.4731
F1 @ 75:     0.3844
F1 @ thresh: [    0.47314     0.47225     0.46699     0.45644     0.42823     0.38443     0.32105      0.2299     0.10356    0.014946]
IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
F1 per class:
  0: [   0.081633    0.081633    0.081633    0.081633    0.081633    0.040816    0.040816           0           0           0]
  1: [    0.72868     0.72868     0.72093     0.72093     0.69767     0.64341     0.53488     0.34884    0.093023   0.0077519]
  2: [    0.34965     0.34965     0.33566     0.32168     0.26573     0.20979     0.15385     0.06993    0.041958           0]
  3: [    0.47619     0.47619     0.47619     0.47619     0.47619     0.42857     0.42857      0.2381     0.14286    0.047619]
  4: [    0.32911     0.32911     0.32911     0.25316     0.22785      0.1519    0.075949           0           0           0]
  5: [   0.094118    0.094118    0.094118    0.094118    0.070588    0.070588    0.047059    0.023529    0.023529           0]
  6: [    0.48797     0.48797     0.48797     0.47423     0.45017     0.40206      0.3299     0.24055     0.10309    0.013746]
  7: [    0.51402     0.51402     0.51402     0.51402     0.48598     0.47664      0.4486     0.39252     0.19626    0.028037]
  8: [    0.90476     0.85714     0.71429     0.71429     0.57143     0.38095      0.2381     0.14286    0.047619           0]
  9: [    0.97297     0.97297     0.97297     0.97297     0.97297     0.97297     0.86486     0.86486     0.75676     0.21622]

Small objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.1607
  F1 @ 75:     0.0991
  F1 @ thresh: [    0.16071     0.16071     0.16071     0.15548     0.12898    0.099131    0.077918    0.043065    0.015462   0.0033126]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    0: [   0.081633    0.081633    0.081633    0.081633    0.081633    0.040816    0.040816           0           0           0]
    1: [          0           0           0           0           0           0           0           0           0           0]
    2: [    0.14035     0.14035     0.14035     0.14035     0.10526    0.070175    0.070175    0.035088           0           0]
    3: [    0.47619     0.47619     0.47619     0.47619     0.47619     0.42857     0.42857      0.2381     0.14286    0.047619]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [   0.094118    0.094118    0.094118    0.094118    0.070588    0.070588    0.047059    0.023529    0.023529           0]
    6: [     0.1958      0.1958      0.1958     0.18182     0.13986    0.097902    0.055944    0.041958           0           0]
  
Medium objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.5712
  F1 @ 75:     0.4828
  F1 @ thresh: [    0.57116     0.57116     0.56918     0.55994     0.53211     0.48279     0.39094     0.26536     0.10421   0.0066137]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    1: [    0.75918     0.75918     0.75102     0.75102     0.72653     0.66939      0.5551     0.36735    0.097959   0.0081633]
    2: [    0.38554     0.38554     0.38554     0.38554     0.31325     0.26506     0.16867    0.096386    0.072289           0]
    4: [    0.35616     0.35616     0.35616     0.27397     0.24658     0.16438    0.082192           0           0           0]
    6: [    0.57635     0.57635     0.57635     0.57143     0.55172     0.50739     0.42365     0.30049     0.12315   0.0098522]
    7: [    0.46753     0.46753     0.46753     0.46753     0.44156     0.41558     0.33766     0.25974     0.15584           0]
  
Large objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.5644
  F1 @ 75:     0.4969
  F1 @ thresh: [    0.56439     0.55825     0.53985     0.53985     0.52145     0.49691     0.46686     0.42798     0.26212    0.070007]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    4: [          0           0           0           0           0           0           0           0           0           0]
    6: [    0.32258     0.32258     0.32258     0.32258     0.32258     0.32258     0.32258     0.32258     0.32258     0.12903]
    7: [    0.48889     0.48889     0.48889     0.48889     0.48889     0.48889     0.48889     0.44444     0.20741    0.044444]
    8: [    0.92683     0.87805     0.73171     0.73171     0.58537     0.39024      0.2439     0.14634     0.04878           0]
    9: [    0.97297     0.97297     0.97297     0.97297     0.97297     0.97297     0.86486     0.86486     0.75676     0.21622]
  
RecallResult:
Metric target:    MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
R @ 50:     0.3417
R @ 75:     0.2782
R @ thresh: [    0.34168     0.34079     0.33631     0.32916     0.30948     0.27818     0.23256     0.16726    0.076029    0.011628]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
Recall per class:
  0: [   0.042553    0.042553    0.042553    0.042553    0.042553    0.021277    0.021277           0           0           0]
  1: [    0.59494     0.59494     0.58861     0.58861     0.56962     0.52532     0.43671     0.28481    0.075949   0.0063291]
  2: [    0.21186     0.21186     0.20339     0.19492     0.16102     0.12712     0.09322    0.042373    0.025424           0]
  3: [    0.41667     0.41667     0.41667     0.41667     0.41667       0.375       0.375     0.20833       0.125    0.041667]
  4: [    0.24074     0.24074     0.24074     0.18519     0.16667     0.11111    0.055556           0           0           0]
  5: [   0.049383    0.049383    0.049383    0.049383    0.037037    0.037037    0.024691    0.012346    0.012346           0]
  6: [    0.32273     0.32273     0.32273     0.31364     0.29773     0.26591     0.21818     0.15909    0.068182   0.0090909]
  7: [    0.35032     0.35032     0.35032     0.35032     0.33121     0.32484     0.30573     0.26752     0.13376    0.019108]
  8: [    0.90476     0.85714     0.71429     0.71429     0.57143     0.38095      0.2381     0.14286    0.047619           0]
  9: [          1           1           1           1           1           1     0.88889     0.88889     0.77778     0.22222]

Small objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.0986
  R @ 75:     0.0638
  R @ thresh: [   0.098551    0.098551    0.098551    0.095652    0.081159    0.063768    0.052174    0.028986    0.011594   0.0028986]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    0: [   0.042553    0.042553    0.042553    0.042553    0.042553    0.021277    0.021277           0           0           0]
    1: [          0           0           0           0           0           0           0           0           0           0]
    2: [   0.076923    0.076923    0.076923    0.076923    0.057692    0.038462    0.038462    0.019231           0           0]
    3: [    0.41667     0.41667     0.41667     0.41667     0.41667       0.375       0.375     0.20833       0.125    0.041667]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [   0.049383    0.049383    0.049383    0.049383    0.037037    0.037037    0.024691    0.012346    0.012346           0]
    6: [    0.10853     0.10853     0.10853     0.10078    0.077519    0.054264    0.031008    0.023256           0           0]
  
Medium objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.4241
  R @ 75:     0.3597
  R @ thresh: [    0.42409     0.42409     0.42244     0.41584     0.39604     0.35974     0.29208     0.19802    0.075908   0.0049505]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    1: [    0.63265     0.63265     0.62585     0.62585     0.60544     0.55782     0.46259     0.30612    0.081633   0.0068027]
    2: [    0.24242     0.24242     0.24242     0.24242     0.19697     0.16667     0.10606    0.060606    0.045455           0]
    4: [     0.2549      0.2549      0.2549     0.19608     0.17647     0.11765    0.058824           0           0           0]
    6: [    0.41053     0.41053     0.41053     0.40702     0.39298      0.3614     0.30175     0.21404    0.087719   0.0070175]
    7: [    0.31579     0.31579     0.31579     0.31579     0.29825      0.2807     0.22807     0.17544     0.10526           0]
  
Large objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.4491
  R @ 75:     0.3832
  R @ thresh: [     0.4491     0.44311     0.42515     0.42515     0.40719     0.38323     0.35329     0.32335     0.20359    0.053892]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    4: [          0           0           0           0           0           0           0           0           0           0]
    6: [    0.19231     0.19231     0.19231     0.19231     0.19231     0.19231     0.19231     0.19231     0.19231    0.076923]
    7: [       0.33        0.33        0.33        0.33        0.33        0.33        0.33         0.3        0.14        0.03]
    8: [    0.90476     0.85714     0.71429     0.71429     0.57143     0.38095      0.2381     0.14286    0.047619           0]
    9: [          1           1           1           1           1           1     0.88889     0.88889     0.77778     0.22222]
  
PrecisionResult:
Metric target:    MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
P @ 50:     0.9512
P @ 75:     0.7506
P @ thresh: [    0.95123     0.95034     0.94202     0.92091     0.85027     0.75064     0.62008      0.4225     0.19896    0.024473]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
Precision per class:
  0: [          1           1           1           1           1         0.5         0.5           0           0           0]
  1: [       0.94        0.94        0.93        0.93         0.9        0.83        0.69        0.45        0.12        0.01]
  2: [          1           1        0.96        0.92        0.76         0.6        0.44         0.2        0.12           0]
  3: [    0.55556     0.55556     0.55556     0.55556     0.55556         0.5         0.5     0.27778     0.16667    0.055556]
  4: [       0.52        0.52        0.52         0.4        0.36        0.24        0.12           0           0           0]
  5: [          1           1           1           1        0.75        0.75         0.5        0.25        0.25           0]
  6: [          1           1           1     0.97183     0.92254     0.82394     0.67606     0.49296     0.21127    0.028169]
  7: [    0.96491     0.96491     0.96491     0.96491     0.91228     0.89474     0.84211     0.73684     0.36842    0.052632]
  8: [    0.90476     0.85714     0.71429     0.71429     0.57143     0.38095      0.2381     0.14286    0.047619           0]
  9: [    0.94737     0.94737     0.94737     0.94737     0.94737     0.94737     0.84211     0.84211     0.73684     0.21053]

Small objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     0.9042
  P @ 75:     0.5262
  P @ thresh: [    0.90415     0.90415     0.90415     0.87745     0.70848     0.52623     0.38741     0.18829     0.07029   0.0038647]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    0: [          1           1           1           1           1         0.5         0.5           0           0           0]
    1: [          0           0           0           0           0           0           0           0           0           0]
    2: [        0.8         0.8         0.8         0.8         0.6         0.4         0.4         0.2           0           0]
    3: [    0.55556     0.55556     0.55556     0.55556     0.55556         0.5         0.5     0.27778     0.16667    0.055556]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [          1           1           1           1        0.75        0.75         0.5        0.25        0.25           0]
    6: [          1           1           1     0.92857     0.71429         0.5     0.28571     0.21429           0           0]
  
Medium objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     0.9218
  P @ 75:     0.7720
  P @ thresh: [    0.92184     0.92184     0.91936       0.904     0.85328     0.77198     0.62004     0.42113     0.17431    0.010249]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    1: [    0.94898     0.94898     0.93878     0.93878     0.90816     0.83673     0.69388     0.45918     0.12245    0.010204]
    2: [    0.94118     0.94118     0.94118     0.94118     0.76471     0.64706     0.41176     0.23529     0.17647           0]
    4: [    0.59091     0.59091     0.59091     0.45455     0.40909     0.27273     0.13636           0           0           0]
    6: [    0.96694     0.96694     0.96694     0.95868     0.92562     0.85124     0.71074     0.50413     0.20661    0.016529]
    7: [        0.9         0.9         0.9         0.9        0.85         0.8        0.65         0.5         0.3           0]
  
Large objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     0.9418
  P @ 75:     0.8727
  P @ thresh: [    0.94185     0.93556      0.9167      0.9167     0.89783     0.87268     0.84248     0.77858     0.48092     0.13629]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    4: [          0           0           0           0           0           0           0           0           0           0]
    6: [          1           1           1           1           1           1           1           1           1         0.4]
    7: [    0.94286     0.94286     0.94286     0.94286     0.94286     0.94286     0.94286     0.85714         0.4    0.085714]
    8: [       0.95         0.9        0.75        0.75         0.6         0.4        0.25        0.15        0.05           0]
    9: [    0.94737     0.94737     0.94737     0.94737     0.94737     0.94737     0.84211     0.84211     0.73684     0.21053]
  
MeanAveragePrecisionResult:
Metric target: MetricTarget.BOXES
Class agnostic: False
mAP @ 50:95: 0.2611
mAP @ 50:    0.4030
mAP @ 75:    0.2768
mAP scores: [    0.40302     0.39611     0.37478     0.36471     0.32845     0.27685     0.21977     0.15213    0.084573    0.010781]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
AP per class:
  0: [   0.049505    0.049505    0.049505    0.049505    0.049505    0.029703    0.029703           0           0           0]
  1: [    0.58413     0.58413     0.57424     0.57424     0.54129     0.47461     0.32594      0.1525    0.010384           0]
  2: [    0.21782     0.21782     0.20016     0.18498     0.14216    0.074948    0.042713    0.013335   0.0032474           0]
  3: [    0.39189     0.39189     0.39189     0.39189     0.39189     0.33389     0.33389    0.079941    0.040755   0.0037954]
  4: [    0.20826     0.20826     0.20826     0.13989      0.1233    0.071192    0.020012           0           0           0]
  5: [   0.049505    0.049505    0.049505    0.049505    0.039604    0.039604    0.029703    0.019802    0.019802           0]
  6: [    0.32673     0.32673     0.32673      0.3095     0.27456     0.21855     0.15218    0.085093    0.011174           0]
  7: [    0.34352     0.34352     0.34352     0.34352     0.31023      0.2987     0.26819     0.22216    0.039425  0.00038827]
  8: [    0.85882     0.78976     0.60403     0.60403     0.41199     0.22728     0.11713    0.070259   0.0017649           0]
  9: [          1           1           1           1           1           1     0.87822     0.87822     0.71918     0.10363]

Small objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.0608
  mAP @ 50:    0.0925
  mAP @ 75:    0.0658
  mAP scores: [   0.092488    0.092488    0.092488    0.092387    0.082419    0.065755     0.06255    0.018209   0.0086511   0.0005422]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    0: [   0.049505    0.049505    0.049505    0.049505    0.049505    0.029703    0.029703           0           0           0]
    1: [          0           0           0           0           0           0           0           0           0           0]
    2: [   0.047611    0.047611    0.047611    0.047611    0.025585    0.012211    0.012211   0.0019802           0           0]
    3: [    0.39189     0.39189     0.39189     0.39189     0.39189     0.33389     0.33389    0.079941    0.040755   0.0037954]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [   0.049505    0.049505    0.049505    0.049505    0.039604    0.039604    0.029703    0.019802    0.019802           0]
    6: [    0.10891     0.10891     0.10891      0.1082    0.070351    0.044879    0.032343    0.025743           0           0]
  
Medium objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.2213
  mAP @ 50:    0.3543
  mAP @ 75:    0.2481
  mAP scores: [    0.35427     0.35427     0.35229     0.33576     0.30222     0.24809     0.16153    0.087859    0.016383           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    1: [    0.62328     0.62328     0.61339     0.61339     0.57935     0.50086     0.34646      0.1656    0.011466           0]
    2: [    0.24367     0.24367     0.24367     0.24367     0.17528     0.10982    0.053169    0.028049    0.012539           0]
    4: [    0.22165     0.22165     0.22165     0.14918     0.13174    0.072224    0.020012           0           0           0]
    6: [    0.39339     0.39339     0.39339     0.38321     0.35944     0.30583     0.20899     0.10572    0.017151           0]
    7: [    0.28937     0.28937     0.28937     0.28937     0.26528      0.2517     0.17903     0.13992    0.040756           0]
  
Large objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.3323
  mAP @ 50:    0.4752
  mAP @ 75:    0.3489
  mAP scores: [     0.4752     0.46139     0.42424     0.42424     0.38583     0.34889     0.30251      0.2841     0.19175    0.025287]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    4: [          0           0           0           0           0           0           0           0           0           0]
    6: [    0.19802     0.19802     0.19802     0.19802     0.19802     0.19802     0.19802     0.19802     0.19802    0.020886]
    7: [    0.31917     0.31917     0.31917     0.31917     0.31917     0.31917     0.31917     0.27398    0.039787   0.0019202]
    8: [    0.85882     0.78976     0.60403     0.60403     0.41199     0.22728     0.11713    0.070259   0.0017649           0]
    9: [          1           1           1           1           1           1     0.87822     0.87822     0.71918     0.10363]
  
